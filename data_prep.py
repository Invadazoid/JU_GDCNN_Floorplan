#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue May 21 15:00:59 2019

@author: intern(Sayan Chatterjee)
"""

import xml.etree.ElementTree as ET 
import os
import os.path
from PIL import Image
import numpy as np
import skimage.io as io

MAX_WIDTH = 512

FLOORPLAN_LABELS = {
        "background":0,
        "line":1,
        "armchair":2,
        "bed":3,
        "door1":4,
        "door2":5,
        "sink1":6,
        "sink2":7,
        "sink3":8,
        "sink4":9,
        "sofa1":10,
        "sofa2":11,
        "table1":12,
        "table2":13,
        "table3":14,
        "tub":15,
        "window1":16,
        "window2":17
        }


CIRCUIT_LABELS = {
        "background":0,
        "line":1,
        "battery1":2,
        "battery2":3,
        "capacitor1":4,
        "capacitor2":5,
        "core-air":6,
        "core-hiron":7,
        "core-iron":8,
        "diode1":9,
        "diode2":10,
        "diode3":11,
        "diodephoto":12,
        "earth":13,
        "gate-ampli":14,
        "outlet":15,
        "relay":16,
        "resistor":17,
        "transistor-mosfetn":18,
        "transistor-mosfetp":19,
        "transistor-npn":20,
        "transistor-pnp":21,
        "unspecified":22
}

SYMBOL_LABELS = {
        "background":0,
        "line":1,
        "symbol001":2,
        "symbol002":3,
        "symbol003":4,
        "symbol004":5,
        "symbol005":6,
        "symbol006":7,
        "symbol007":8,
        "symbol008":9,
        "symbol009":10,
        "symbol010":11,
        "symbol011":12,
        "symbol012":13,
        "symbol013":14,
        "symbol014":15,
        "symbol015":16,
        "symbol016":17,
        "symbol017":18,
        "symbol018":19,
        "symbol019":20,
        "symbol020":21,
        "symbol021":22,
        "symbol022":23,
        "symbol023":24,
        "symbol024":25,
        "symbol025":26,
        "symbol026":27,
        "symbol027":28,
        "symbol028":29,
        "symbol029":30,
        "symbol030":31,
        "symbol031":32,
        "symbol032":33,
        "symbol033":34,
        "symbol034":35,
        "symbol035":36,
        "symbol036":37,
        "symbol037":38,
        "symbol038":39,
        "symbol039":40,
        "symbol040":41,
        "symbol041":42,
        "symbol042":43,
        "symbol043":44,
        "symbol044":45,
        "symbol045":46,
        "symbol046":47,
        "symbol047":48,
        "symbol048":49,
        "symbol049":50,
        "symbol050":51,
        "symbol051":52,
        "symbol052":53,
        "symbol053":54,
        "symbol054":55,
        "symbol055":56,
        "symbol056":57,
        "symbol057":58,
        "symbol058":59,
        "symbol059":60,
        "symbol060":61,
        "symbol061":62,
        "symbol062":63,
        "symbol063":64,
        "symbol064":65,
        "symbol065":66,
        "symbol066":67,
        "symbol067":68,
        "symbol068":69,
        "symbol069":70,
        "symbol070":71,
        "symbol071":72,
        "symbol072":73,
        "symbol073":74,
        "symbol074":75,
        "symbol075":76,
        "symbol076":77,
        "symbol077":78,
        "symbol078":79,
        "symbol079":80,
        "symbol080":81,
        "symbol081":82,
        "symbol082":83,
        "symbol083":84,
        "symbol084":85,
        "symbol085":86,
        "symbol086":87,
        "symbol087":88,
        "symbol088":89,
        "symbol089":90,
        "symbol090":91,
        "symbol091":92,
        "symbol092":93,
        "symbol093":94,
        "symbol094":95,
        "symbol095":96,
        "symbol096":97,
        "symbol097":98,
        "symbol098":99,
        "symbol099":100,
        "symbol100":101,
        "symbol101":102,
        "symbol102":103,
        "symbol103":104,
        "symbol104":105,
        "symbol105":106,
        "symbol106":107,
        "symbol107":108,
        "symbol108":109,
        "symbol109":110,
        "symbol110":111,
        "symbol111":112,
        "symbol112":113,
        "symbol113":114,
        "symbol114":115,
        "symbol115":116,
        "symbol116":117,
        "symbol117":118,
        "symbol118":119,
        "symbol119":120,
        "symbol120":121,
        "symbol121":122,
        "symbol122":123,
        "symbol123":124,
        "symbol124":125,
        "symbol125":126,
        "symbol126":127,
        "symbol127":128,
        "symbol128":129,
        "symbol129":130,
        "symbol130":131,
        "symbol131":132,
        "symbol132":133,
        "symbol133":134,
        "symbol134":135,
        "symbol135":136,
        "symbol136":137,
        "symbol137":138,
        "symbol138":139,
        "symbol139":140,
        "symbol140":141,
        "symbol141":142,
        "symbol142":143,
        "symbol143":144,
        "symbol144":145,
        "symbol145":146,
        "symbol146":147,
        "symbol147":148,
        "symbol148":149,
        "symbol149":150,
        "symbol150":151
        }

ALPHA_LABELS = {
        "a-lc-Arial":0,
        "A-uc-Arial":1,
        "b-lc-Arial":2,
        "B-uc-Arial":3,
        "c-lc-Arial":4,
        "C-uc-Arial":5,
        "d-lc-Arial":6,
        "D-uc-Arial":7,
        "e-lc-Arial":8,
        "E-uc-Arial":9,
        "f-lc-Arial":10,
        "F-uc-Arial":11,
        "g-lc-Arial":12,
        "G-uc-Arial":13,
        "h-lc-Arial":14,
        "H-uc-Arial":15,
        "i-lc-Arial":16,
        "I-uc-Arial":17,
        "j-lc-Arial":18,
        "J-uc-Arial":19,
        "k-lc-Arial":20,
        "K-uc-Arial":21,
        "l-lc-Arial":22,
        "L-uc-Arial":23,
        "m-lc-Arial":24,
        "M-uc-Arial":25,
        "n-lc-Arial":26,
        "N-uc-Arial":27,
        "o-lc-Arial":28,
        "O-uc-Arial":29,
        "p-lc-Arial":30,
        "P-uc-Arial":31,
        "q-lc-Arial":32,
        "Q-uc-Arial":33,
        "r-lc-Arial":34,
        "R-uc-Arial":35,
        "s-lc-Arial":36,
        "S-uc-Arial":37,
        "t-lc-Arial":38,
        "T-uc-Arial":39,
        "u-lc-Arial":40,
        "U-uc-Arial":41,
        "v-lc-Arial":42,
        "V-uc-Arial":43,
        "w-lc-Arial":44,
        "W-uc-Arial":45,
        "x-lc-Arial":46,
        "X-uc-Arial":47,
        "y-lc-Arial":48,
        "Y-uc-Arial":49,
        "z-lc-Arial":50,
        "Z-uc-Arial":51,
        "a-lc-Courier":52,
        "A-uc-Courier":53,
        "b-lc-Courier":54,
        "B-uc-Courier":55,
        "c-lc-Courier":56,
        "C-uc-Courier":57,
        "d-lc-Courier":58,
        "D-uc-Courier":59,
        "e-lc-Courier":60,
        "E-uc-Courier":61,
        "f-lc-Courier":62,
        "F-uc-Courier":63,
        "g-lc-Courier":64,
        "G-uc-Courier":65,
        "h-lc-Courier":66,
        "H-uc-Courier":67,
        "i-lc-Courier":68,
        "I-uc-Courier":69,
        "j-lc-Courier":70,
        "J-uc-Courier":71,
        "k-lc-Courier":72,
        "K-uc-Courier":73,
        "l-lc-Courier":74,
        "L-uc-Courier":75,
        "m-lc-Courier":76,
        "M-uc-Courier":77,
        "n-lc-Courier":78,
        "N-uc-Courier":79,
        "o-lc-Courier":80,
        "O-uc-Courier":81,
        "p-lc-Courier":82,
        "P-uc-Courier":83,
        "q-lc-Courier":84,
        "Q-uc-Courier":85,
        "r-lc-Courier":86,
        "R-uc-Courier":87,
        "s-lc-Courier":88,
        "S-uc-Courier":89,
        "t-lc-Courier":90,
        "T-uc-Courier":91,
        "u-lc-Courier":92,
        "U-uc-Courier":93,
        "v-lc-Courier":94,
        "V-uc-Courier":95,
        "w-lc-Courier":96,
        "W-uc-Courier":97,
        "x-lc-Courier":98,
        "X-uc-Courier":99,
        "y-lc-Courier":100,
        "Y-uc-Courier":101,
        "z-lc-Courier":102,
        "Z-uc-Courier":103,
        "a-lc-Times New Roman":104,
        "A-uc-Times New Roman":105,
        "b-lc-Times New Roman":106,
        "B-uc-Times New Roman":107,
        "c-lc-Times New Roman":108,
        "C-uc-Times New Roman":109,
        "d-lc-Times New Roman":110,
        "D-uc-Times New Roman":111,
        "e-lc-Times New Roman":112,
        "E-uc-Times New Roman":113,
        "f-lc-Times New Roman":114,
        "F-uc-Times New Roman":115,
        "g-lc-Times New Roman":116,
        "G-uc-Times New Roman":117,
        "h-lc-Times New Roman":118,
        "H-uc-Times New Roman":119,
        "i-lc-Times New Roman":120,
        "I-uc-Times New Roman":121,
        "j-lc-Times New Roman":122,
        "J-uc-Times New Roman":123,
        "k-lc-Times New Roman":124,
        "K-uc-Times New Roman":125,
        "l-lc-Times New Roman":126,
        "L-uc-Times New Roman":127,
        "m-lc-Times New Roman":128,
        "M-uc-Times New Roman":129,
        "n-lc-Times New Roman":130,
        "N-uc-Times New Roman":131,
        "o-lc-Times New Roman":132,
        "O-uc-Times New Roman":133,
        "p-lc-Times New Roman":134,
        "P-uc-Times New Roman":135,
        "q-lc-Times New Roman":136,
        "Q-uc-Times New Roman":137,
        "r-lc-Times New Roman":138,
        "R-uc-Times New Roman":139,
        "s-lc-Times New Roman":140,
        "S-uc-Times New Roman":141,
        "t-lc-Times New Roman":142,
        "T-uc-Times New Roman":143,
        "u-lc-Times New Roman":144,
        "U-uc-Times New Roman":145,
        "v-lc-Times New Roman":146,
        "V-uc-Times New Roman":147,
        "w-lc-Times New Roman":148,
        "W-uc-Times New Roman":149,
        "x-lc-Times New Roman":150,
        "X-uc-Times New Roman":151,
        "y-lc-Times New Roman":152,
        "Y-uc-Times New Roman":153,
        "z-lc-Times New Roman":154,
        "Z-uc-Times New Roman":155,
        }

TEXTGRAPH = {
        "background":0,
        "0-Arial-bn":1,
        "1-Arial-bn":2,
        "2-Arial-bn":3,
        "3-Arial-bn":4,
        "4-Arial-bn":5,
        "5-Arial-bn":6,
        "6-Arial-bn":7,
        "7-Arial-bn":8,
        "8-Arial-bn":9,
        "9-Arial-bn":10,
        "0-Arial-pn":11,
        "1-Arial-pn":12,
        "2-Arial-pn":13,
        "3-Arial-pn":14,
        "4-Arial-pn":15,
        "5-Arial-pn":16,
        "6-Arial-pn":17,
        "7-Arial-pn":18,
        "8-Arial-pn":19,
        "9-Arial-pn":20,
        "a-lc-Arial-bn":21,
        "A-uc-Arial-bn":22,
        "b-lc-Arial-bn":23,
        "B-uc-Arial-bn":24,
        "c-lc-Arial-bn":25,
        "C-uc-Arial-bn":26,
        "d-lc-Arial-bn":27,
        "D-uc-Arial-bn":28,
        "e-lc-Arial-bn":29,
        "E-uc-Arial-bn":30,
        "f-lc-Arial-bn":31,
        "F-uc-Arial-bn":32,
        "g-lc-Arial-bn":33,
        "G-uc-Arial-bn":34,
        "h-lc-Arial-bn":35,
        "H-uc-Arial-bn":36,
        "i-lc-Arial-bn":37,
        "I-uc-Arial-bn":38,
        "j-lc-Arial-bn":39,
        "J-uc-Arial-bn":40,
        "k-lc-Arial-bn":41,
        "K-uc-Arial-bn":42,
        "l-lc-Arial-bn":43,
        "L-uc-Arial-bn":44,
        "m-lc-Arial-bn":45,
        "M-uc-Arial-bn":46,
        "n-lc-Arial-bn":47,
        "N-uc-Arial-bn":48,
        "o-lc-Arial-bn":49,
        "O-uc-Arial-bn":50,
        "p-lc-Arial-bn":51,
        "P-uc-Arial-bn":52,
        "q-lc-Arial-bn":53,
        "Q-uc-Arial-bn":54,
        "r-lc-Arial-bn":55,
        "R-uc-Arial-bn":56,
        "s-lc-Arial-bn":57,
        "S-uc-Arial-bn":58,
        "t-lc-Arial-bn":59,
        "T-uc-Arial-bn":60,
        "u-lc-Arial-bn":61,
        "U-uc-Arial-bn":62,
        "v-lc-Arial-bn":63,
        "V-uc-Arial-bn":64,
        "w-lc-Arial-bn":65,
        "W-uc-Arial-bn":66,
        "x-lc-Arial-bn":67,
        "X-uc-Arial-bn":68,
        "y-lc-Arial-bn":69,
        "Y-uc-Arial-bn":70,
        "z-lc-Arial-bn":71,
        "Z-uc-Arial-bn":72,
        "a-lc-Arial-pn":73,
        "A-uc-Arial-pn":74,
        "b-lc-Arial-pn":75,
        "B-uc-Arial-pn":76,
        "c-lc-Arial-pn":77,
        "C-uc-Arial-pn":78,
        "d-lc-Arial-pn":79,
        "D-uc-Arial-pn":80,
        "e-lc-Arial-pn":81,
        "E-uc-Arial-pn":82,
        "f-lc-Arial-pn":83,
        "F-uc-Arial-pn":84,
        "g-lc-Arial-pn":85,
        "G-uc-Arial-pn":86,
        "h-lc-Arial-pn":87,
        "H-uc-Arial-pn":88,
        "i-lc-Arial-pn":89,
        "I-uc-Arial-pn":90,
        "j-lc-Arial-pn":91,
        "J-uc-Arial-pn":92,
        "k-lc-Arial-pn":93,
        "K-uc-Arial-pn":94,
        "l-lc-Arial-pn":95,
        "L-uc-Arial-pn":96,
        "m-lc-Arial-pn":97,
        "M-uc-Arial-pn":98,
        "n-lc-Arial-pn":99,
        "N-uc-Arial-pn":100,
        "o-lc-Arial-pn":101,
        "O-uc-Arial-pn":102,
        "p-lc-Arial-pn":103,
        "P-uc-Arial-pn":104,
        "q-lc-Arial-pn":105,
        "Q-uc-Arial-pn":106,
        "r-lc-Arial-pn":107,
        "R-uc-Arial-pn":108,
        "s-lc-Arial-pn":109,
        "S-uc-Arial-pn":110,
        "t-lc-Arial-pn":111,
        "T-uc-Arial-pn":112,
        "u-lc-Arial-pn":113,
        "U-uc-Arial-pn":114,
        "v-lc-Arial-pn":115,
        "V-uc-Arial-pn":116,
        "w-lc-Arial-pn":117,
        "W-uc-Arial-pn":118,
        "x-lc-Arial-pn":119,
        "X-uc-Arial-pn":120,
        "y-lc-Arial-pn":121,
        "Y-uc-Arial-pn":122,
        "z-lc-Arial-pn":123,
        "Z-uc-Arial-pn":124,       
        }

LABELS = TEXTGRAPH    # change this value depending on the dataset


def prepare(mypath):
    out_path = os.path.join(mypath, "output")
    in_path = os.path.join(mypath, "input")
    
    if not os.path.exists(out_path):
        os.makedirs(out_path)
        
    if not os.path.exists(in_path):
        os.makedirs(in_path)
    
    #Resizing the image
    for file in os.listdir(mypath):
        if(file.endswith(".tiff")):
            imgpath = os.path.join(mypath, file)
    
            with Image.open(imgpath) as image: 
                img_width, img_height = image.size
                
                multiplier = MAX_WIDTH / img_width
                
                WIDTH = int(img_width * multiplier)
                HEIGHT = int(img_height * multiplier)
                image = image.resize((WIDTH, HEIGHT), Image.BILINEAR)
                print("image size", image.size)
                image.save(os.path.join(in_path, (file.split(".")[0] + ".png")))
                
                WIDTH, HEIGHT = image.size
                m = np.zeros((HEIGHT, WIDTH))   # to store output data
                
                pic = image
                pix = np.array(pic.getdata()).reshape(pic.size[1], pic.size[0])
                data = list(tuple(pixel) for pixel in pix)
                pic.putdata(data)
                
                for i in range(HEIGHT):
                    for j in range(WIDTH):
                        if(pix[i][j]!=255):
                            m[i][j] = 1
    

                xml_path = file.split(".")[0] + ".xml"
                xml_path = os.path.join(mypath, xml_path)
                tree = ET.parse(xml_path)
                root = tree.getroot()
                for r in root.iter('gom.std.OSymbol'):
                    x0 = int(float(r.get("x0")) * multiplier)
                    y0 = int(float(r.get("y0")) * multiplier)
                    x1 = int(float(r.get("x1")) * multiplier)
                    y1 = int(float(r.get("y1")) * multiplier)
                    label = r.get("label")
                    
                    value = LABELS[label]
                    print(value)
                    
                    for j in range(x0,(x1+1)):
                        for i in range(y0,(y1+1)):
                            if(m[i][j] == 1):
                                m[i][j] = value
                                
                output_image = os.path.join(out_path, (file.split(".")[0] + "_out.png"))

                io.imsave(output_image, m.astype(np.uint8))
                print("Output image saved:", output_image)
                            
if __name__ == "__main__":
    mypath = '/home/intern/Codes/Data/data/characters/textgraphics/Unzipped/arial-models/arial-models/'
    prepare(mypath)

            

 